{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0.0"
  },
  "basePath" : "/pnc-rest/rest",
  "tags" : [ {
    "name" : "product-releases"
  }, {
    "name" : "users"
  }, {
    "name" : "build-configurations"
  }, {
    "name" : "products"
  }, {
    "name" : "test"
  }, {
    "name" : "licenses"
  }, {
    "name" : "running-build-records"
  }, {
    "name" : "build-tasks"
  }, {
    "name" : "product-versions"
  }, {
    "name" : "bpm"
  }, {
    "name" : "build-config-set-records"
  }, {
    "name" : "repository-configurations"
  }, {
    "name" : "product-milestones"
  }, {
    "name" : "environments"
  }, {
    "name" : "build-record-push"
  }, {
    "name" : "projects"
  }, {
    "name" : "build-records"
  }, {
    "name" : "builds"
  }, {
    "name" : "build-configuration-sets"
  } ],
  "paths" : {
    "/bpm/tasks" : {
      "get" : {
        "tags" : [ "bpm" ],
        "summary" : "List of (recently) active BPM tasks.",
        "description" : "",
        "operationId" : "getBPMTasks",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BpmTaskRestPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BpmTaskRestPage"
            }
          }
        }
      }
    },
    "/bpm/tasks/start-repository-configuration-creation-url-auto" : {
      "post" : {
        "tags" : [ "bpm" ],
        "summary" : "Start Repository Creation task with url autodetect (internal vs. external).",
        "description" : "",
        "operationId" : "startRCreationTaskWithSingleUrl",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Task parameters.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RepositoryCreationUrlAutoRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      }
    },
    "/bpm/tasks/{taskId}" : {
      "get" : {
        "tags" : [ "bpm" ],
        "summary" : "Get single (recently) active BPM task.",
        "description" : "",
        "operationId" : "getBPMTaskById",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "BPM task ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BpmTaskRestSingleton"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BpmTaskRestSingleton"
            }
          }
        }
      }
    },
    "/bpm/tasks/{taskId}/notify" : {
      "post" : {
        "tags" : [ "bpm" ],
        "summary" : "Notify PNC about a BPM task event. Accepts polymorphic JSON {\"eventType\": \"string\"} based on \"eventType\" field.",
        "description" : "",
        "operationId" : "notifyTask",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "BPM task ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/build-config-set-records" : {
      "get" : {
        "tags" : [ "build-config-set-records" ],
        "summary" : "Gets all build config set execution records",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSetRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSetRecordPage"
            }
          }
        }
      }
    },
    "/build-config-set-records/{id}" : {
      "get" : {
        "tags" : [ "build-config-set-records" ],
        "summary" : "Gets specific build config set execution record",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildConfigSetRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigSetRecordSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigSetRecordSingleton"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "build-config-set-records" ],
        "summary" : "Delete specific Build Config Set Record (it must be from a temporary build). Operation is async, for the result subscribe to 'build-config-set-records#delete' events with optional qualifier buildRecord.id.",
        "description" : "",
        "operationId" : "delete",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildConfigSetRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          }
        }
      }
    },
    "/build-config-set-records/{id}/build-records" : {
      "get" : {
        "tags" : [ "build-config-set-records" ],
        "summary" : "Gets the build records associated with this set",
        "description" : "",
        "operationId" : "getBuildRecords",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Build Config set record id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/build-configuration-sets" : {
      "get" : {
        "tags" : [ "build-configuration-sets" ],
        "summary" : "Gets all Build Configuration Sets",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSetPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSetPage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "build-configuration-sets" ],
        "summary" : "Creates a new Build Configuration Set",
        "description" : "",
        "operationId" : "createNew",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BuildConfigurationSetRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSetSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-configuration-sets/{id}" : {
      "get" : {
        "tags" : [ "build-configuration-sets" ],
        "summary" : "Gets a specific Build Configuration Set",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration Set id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSetSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSetSingleton"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "build-configuration-sets" ],
        "summary" : "Updates an existing Build Configuration Set",
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration Set id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BuildConfigurationSetRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "build-configuration-sets" ],
        "summary" : "Removes a specific Build Configuration Set",
        "description" : "",
        "operationId" : "deleteSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration Set id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-configuration-sets/{id}/build" : {
      "post" : {
        "tags" : [ "build-configuration-sets" ],
        "summary" : "Builds the Configurations for the Specified Set",
        "description" : "",
        "operationId" : "build",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration Set id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "callbackUrl",
          "in" : "query",
          "description" : "Optional Callback URL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "temporaryBuild",
          "in" : "query",
          "description" : "Is it a temporary build or a standard build?",
          "required" : false,
          "type" : "boolean",
          "default" : "false"
        }, {
          "name" : "forceRebuild",
          "in" : "query",
          "description" : "Should we force the rebuild of all build configurations?",
          "required" : false,
          "type" : "boolean",
          "default" : "false"
        }, {
          "name" : "timestampAlignment",
          "in" : "query",
          "description" : "Should we add a timestamp during the alignment? Valid only for temporary builds.",
          "required" : false,
          "type" : "boolean",
          "default" : "false"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigSetRecordSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-configuration-sets/{id}/build-config-set-records" : {
      "get" : {
        "tags" : [ "build-configuration-sets" ],
        "summary" : "Get all build config set execution records associated with this build config set, returns empty list if none are found",
        "description" : "",
        "operationId" : "getAllBuildConfigSetRecords",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Build config set id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSetRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSetRecordPage"
            }
          }
        }
      }
    },
    "/build-configuration-sets/{id}/build-configurations" : {
      "get" : {
        "tags" : [ "build-configuration-sets" ],
        "summary" : "Gets the Configurations for the Specified Set",
        "description" : "",
        "operationId" : "getConfigurations",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration Set id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "build-configuration-sets" ],
        "summary" : "Adds a configuration to the Specified Set",
        "description" : "",
        "operationId" : "addConfiguration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration Set id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BuildConfigurationRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "build-configuration-sets" ],
        "operationId" : "updateConfigurations",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration Set Id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/BuildConfigurationRest"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/build-configuration-sets/{id}/build-configurations/{configId}" : {
      "delete" : {
        "tags" : [ "build-configuration-sets" ],
        "summary" : "Removes a configuration from the specified config set",
        "description" : "",
        "operationId" : "removeConfiguration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build configuration set id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "configId",
          "in" : "path",
          "description" : "Build configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-configuration-sets/{id}/build-records" : {
      "get" : {
        "tags" : [ "build-configuration-sets" ],
        "summary" : "Gets all build records associated with the contained build configurations",
        "description" : "",
        "operationId" : "getBuildRecords",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build configuration set id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/build-configurations" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Gets all Build Configurations",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Creates a new Build Configuration.",
        "description" : "",
        "operationId" : "createNew",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BuildConfigurationRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Entity successfully created",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-configurations/products/{productId}" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Gets all Build Configurations of a Product",
        "description" : "",
        "operationId" : "getAllByProductId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          }
        }
      }
    },
    "/build-configurations/products/{productId}/product-versions/{versionId}" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Gets all Build Configurations of the Specified Product Version",
        "description" : "",
        "operationId" : "getAllByProductVersionId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "Product Version id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          }
        }
      }
    },
    "/build-configurations/projects/{projectId}" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Gets all Build Configurations of a Project",
        "description" : "",
        "operationId" : "getAllByProjectId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          }
        }
      }
    },
    "/build-configurations/supported-generic-parameters" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Gets the minimal set of supported genericParameters and their description for the BuildConfiguration. There can be also other supported parameters not know by core.",
        "description" : "",
        "operationId" : "getSupportedGenericParameters",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/build-configurations/{id}" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Gets a specific Build Configuration",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSingleton"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Updates an existing Build Configuration",
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BuildConfigurationRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Removes a specific Build Configuration",
        "description" : "",
        "operationId" : "deleteSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-configurations/{id}/build" : {
      "post" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Triggers the build of a specific Build Configuration",
        "description" : "",
        "operationId" : "trigger",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "callbackUrl",
          "in" : "query",
          "description" : "Optional Callback URL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "temporaryBuild",
          "in" : "query",
          "description" : "Is it a temporary build or a standard build?",
          "required" : false,
          "type" : "boolean",
          "default" : "false"
        }, {
          "name" : "forceRebuild",
          "in" : "query",
          "description" : "Should we force the rebuild?",
          "required" : false,
          "type" : "boolean",
          "default" : "false"
        }, {
          "name" : "buildDependencies",
          "in" : "query",
          "description" : "Should we build also dependencies of this BuildConfiguration?",
          "required" : false,
          "type" : "boolean",
          "default" : "true"
        }, {
          "name" : "keepPodOnFailure",
          "in" : "query",
          "description" : "Should we keep the build container running, if the build fails?",
          "required" : false,
          "type" : "boolean",
          "default" : "false"
        }, {
          "name" : "timestampAlignment",
          "in" : "query",
          "description" : "Should we add a timestamp during the alignment? Valid only for temporary builds.",
          "required" : false,
          "type" : "boolean",
          "default" : "false"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-configurations/{id}/build-configuration-sets" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Gets BuildConfiguration Sets associated with the specified BuildConfiguration",
        "description" : "",
        "operationId" : "getBuildConfigurationSets",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSetPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSetPage"
            }
          }
        }
      }
    },
    "/build-configurations/{id}/build-records" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Get all build record associated with this build configuration, returns empty list if no build records are found",
        "description" : "",
        "operationId" : "getBuildRecords",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Build configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/build-configurations/{id}/build-records/latest" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Get latest build record associated with this build configuration, returns no content if no build records are found",
        "description" : "",
        "operationId" : "getLatestBuildRecord",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/build-configurations/{id}/builds" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Get all BuildRecords (running and archived) associated with this Build Configuration, returns empty list if no build records are found",
        "description" : "",
        "operationId" : "getBuilds",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Build configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/build-configurations/{id}/clone" : {
      "post" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Clones an existing Build Configuration",
        "description" : "",
        "operationId" : "clone",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSingleton"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSingleton"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSingleton"
            }
          }
        }
      }
    },
    "/build-configurations/{id}/dependencies" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Get the direct dependencies of the specified configuration",
        "description" : "",
        "operationId" : "getDependencies",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Build configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Adds a dependency to the specified config",
        "description" : "",
        "operationId" : "addDependency",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BuildConfigurationRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-configurations/{id}/dependencies/{dependencyId}" : {
      "delete" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Removes a configuration from the specified config set",
        "description" : "",
        "operationId" : "removeDependency",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build configuration set id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "dependencyId",
          "in" : "path",
          "description" : "Build configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-configurations/{id}/product-versions" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Get associated Product Versions of the specified Configuration",
        "description" : "",
        "operationId" : "getProductVersions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Build configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductVersionPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/ProductVersionPage"
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Associates a product version to the specified config",
        "description" : "",
        "operationId" : "addProductVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProductVersionRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/build-configurations/{id}/product-versions/{productVersionId}" : {
      "delete" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Removes a product version from the specified config set",
        "description" : "",
        "operationId" : "removeProductVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build configuration set id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "productVersionId",
          "in" : "path",
          "description" : "Product version id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/build-configurations/{id}/revisions" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Gets audited revisions of this build configuration",
        "description" : "",
        "operationId" : "getRevisions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Build configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationAuditedPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationAuditedPage"
            }
          }
        }
      }
    },
    "/build-configurations/{id}/revisions/{rev}" : {
      "get" : {
        "tags" : [ "build-configurations" ],
        "summary" : "Get specific audited revision of this build configuration",
        "description" : "",
        "operationId" : "getRevision",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Build configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "rev",
          "in" : "path",
          "description" : "Build configuration rev",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationAuditedSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationAuditedSingleton"
            }
          }
        }
      }
    },
    "/build-record-push" : {
      "post" : {
        "tags" : [ "build-record-push" ],
        "summary" : "Push build record results to Brew.",
        "description" : "",
        "operationId" : "push",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BuildRecordPushRequestRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Map of all requested BuildRecord ids with boolean status.",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/ResultRest"
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-record-push/record-set" : {
      "post" : {
        "tags" : [ "build-record-push" ],
        "summary" : "Push build config set record to Brew.",
        "description" : "",
        "operationId" : "pushRecordSet",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BuildConfigSetRecordPushRequestRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Map of all requested BuildRecord ids with boolean status.",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/ResultRest"
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-record-push/status/{buildRecordId}" : {
      "get" : {
        "tags" : [ "build-record-push" ],
        "summary" : "Latest push result of BuildRecord.",
        "description" : "",
        "operationId" : "status",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "buildRecordId",
          "in" : "path",
          "description" : "Build Record id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPushResultRest"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-record-push/{buildRecordId}/cancel" : {
      "post" : {
        "tags" : [ "build-record-push" ],
        "summary" : "Build record push results.",
        "description" : "",
        "operationId" : "cancel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BuildRecordPushResultRest"
          }
        }, {
          "name" : "buildRecordId",
          "in" : "path",
          "description" : "Build Record id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-record-push/{buildRecordId}/complete" : {
      "post" : {
        "tags" : [ "build-record-push" ],
        "summary" : "Build record push results.",
        "description" : "",
        "operationId" : "push",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BuildRecordPushResultRest"
          }
        }, {
          "name" : "buildRecordId",
          "in" : "path",
          "description" : "Build Record id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-record-push/{buildRecordPushResultId}" : {
      "get" : {
        "tags" : [ "build-record-push" ],
        "summary" : "Get Build Record Push Result by Id..",
        "description" : "",
        "operationId" : "get",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "buildRecordId",
          "in" : "path",
          "description" : "Build Record id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPushResultRest"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/build-records" : {
      "get" : {
        "tags" : [ "build-records" ],
        "summary" : "Gets all Build Records",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/build-records/build-configuration-or-project-name/{name}" : {
      "get" : {
        "tags" : [ "build-records" ],
        "summary" : "Gets the Build Records produced from the BuildConfiguration by name.",
        "description" : "",
        "operationId" : "getAllForProject",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "BuildConfiguration name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/build-records/build-configurations/{configurationId}" : {
      "get" : {
        "tags" : [ "build-records" ],
        "summary" : "Gets the Build Records linked to a specific Build Configuration",
        "description" : "",
        "operationId" : "getAllForBuildConfiguration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "configurationId",
          "in" : "path",
          "description" : "Build Configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/build-records/get-by-attribute" : {
      "get" : {
        "tags" : [ "build-records" ],
        "summary" : "Get Build Records by attribute.",
        "description" : "",
        "operationId" : "queryByAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "description" : "Attribute key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Attribute value",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordRest"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordRest"
            }
          }
        }
      }
    },
    "/build-records/projects/{projectId}" : {
      "get" : {
        "tags" : [ "build-records" ],
        "summary" : "Gets the Build Records linked to a specific Project",
        "description" : "",
        "operationId" : "getAllForProject",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/build-records/{id}" : {
      "get" : {
        "tags" : [ "build-records" ],
        "summary" : "Gets specific Build Record",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordSingleton"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "build-records" ],
        "summary" : "Delete specific Build Record (it must be from a temporary build). Operation is async, for the result subscribe to 'build-records#delete' events with optional qualifier buildRecord.id.",
        "description" : "",
        "operationId" : "delete",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          }
        }
      }
    },
    "/build-records/{id}/build-configuration-audited" : {
      "get" : {
        "tags" : [ "build-records" ],
        "summary" : "Gets the audited build configuration for specific build record",
        "description" : "",
        "operationId" : "getBuildConfigurationAudited",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationAuditedSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationAuditedSingleton"
            }
          }
        }
      }
    },
    "/build-records/{id}/built-artifacts" : {
      "get" : {
        "tags" : [ "build-records" ],
        "summary" : "Gets artifacts built for specific Build Record",
        "description" : "",
        "operationId" : "getBuiltArtifacts",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ArtifactPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/ArtifactPage"
            }
          }
        }
      }
    },
    "/build-records/{id}/completed-or-running" : {
      "get" : {
        "tags" : [ "build-records" ],
        "summary" : "Deprecated, use /builds/{id}",
        "description" : "",
        "operationId" : "getCompletedOrRunnning",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordSingleton"
            }
          }
        }
      }
    },
    "/build-records/{id}/dependency-artifacts" : {
      "get" : {
        "tags" : [ "build-records" ],
        "summary" : "Gets dependency artifacts for specific Build Record",
        "description" : "",
        "operationId" : "getDependencyArtifacts",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ArtifactPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/ArtifactPage"
            }
          }
        }
      }
    },
    "/build-records/{id}/get-attributes" : {
      "get" : {
        "tags" : [ "build-records" ],
        "summary" : "Get Build Record attributes.",
        "description" : "",
        "operationId" : "getAttributes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/AttributeSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/AttributeSingleton"
            }
          }
        }
      }
    },
    "/build-records/{id}/log" : {
      "get" : {
        "tags" : [ "build-records" ],
        "summary" : "Gets logs for specific Build Record",
        "description" : "",
        "operationId" : "getLogs",
        "consumes" : [ "application/json" ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided"
          },
          "404" : {
            "description" : "Can not find specified result"
          }
        }
      }
    },
    "/build-records/{id}/put-attribute" : {
      "post" : {
        "tags" : [ "build-records" ],
        "summary" : "Add attribute to the BuildRecord.",
        "description" : "",
        "operationId" : "putAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "Attribute key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Attribute value",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          }
        }
      }
    },
    "/build-records/{id}/remove-attribute" : {
      "delete" : {
        "tags" : [ "build-records" ],
        "summary" : "Remove attribute from BuildRecord.",
        "description" : "",
        "operationId" : "removeAttribute",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "Attribute key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          }
        }
      }
    },
    "/build-records/{id}/repour-log" : {
      "get" : {
        "tags" : [ "build-records" ],
        "summary" : "Gets repour logs for specific Build Record",
        "description" : "",
        "operationId" : "getRepourLogs",
        "consumes" : [ "application/json" ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided"
          },
          "404" : {
            "description" : "Can not find specified result"
          }
        }
      }
    },
    "/build-tasks/cancel-build/{buildExecutionConfigurationId}" : {
      "post" : {
        "tags" : [ "build-tasks" ],
        "summary" : "Cancel the build execution defined with given executionConfigurationId.",
        "description" : "",
        "operationId" : "cancelBbuild",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "buildExecutionConfigurationId",
          "in" : "path",
          "description" : "Build Execution Configuration ID. See org.jboss.pnc.spi.executor.BuildExecutionConfiguration.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error"
          },
          "500" : {
            "description" : "Server error"
          },
          "403" : {
            "description" : "User must be logged in."
          }
        }
      }
    },
    "/build-tasks/execute-build" : {
      "post" : {
        "tags" : [ "build-tasks" ],
        "summary" : "Triggers the build execution for a given configuration.",
        "description" : "",
        "operationId" : "build",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "buildExecutionConfiguration",
          "in" : "formData",
          "description" : "Build Execution Configuration. See org.jboss.pnc.spi.executor.BuildExecutionConfiguration.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "usernameTriggered",
          "in" : "formData",
          "description" : "Username who triggered the build. If empty current user is used.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "callbackUrl",
          "in" : "formData",
          "description" : "Optional Callback URL",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error"
          },
          "500" : {
            "description" : "Server error"
          },
          "403" : {
            "description" : "User must be logged in."
          }
        }
      }
    },
    "/build-tasks/{taskId}/completed" : {
      "post" : {
        "tags" : [ "build-tasks" ],
        "summary" : "Notifies the completion of externally managed build task process.",
        "description" : "",
        "operationId" : "buildTaskCompleted",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "Build task id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "buildResult",
          "in" : "formData",
          "description" : "Build result",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          }
        }
      }
    },
    "/builds" : {
      "get" : {
        "tags" : [ "builds" ],
        "summary" : "Gets all Build Records",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orFindByBuildConfigurationName",
          "in" : "query",
          "description" : "Find by BuildConfigurationName (query is combined with other criteria using OR.).",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "andFindByBuildConfigurationName",
          "in" : "query",
          "description" : "Find by BuildConfigurationName (query is combined with other criteria using AND.).",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/builds/ssh-credentials/{id}" : {
      "get" : {
        "tags" : [ "builds" ],
        "summary" : "Gets ssh credentials for a build",
        "description" : "This GET request is for authenticated users only. The path for the endpoint is not restful to be able to authenticate this GET request only.",
        "operationId" : "getSshCredentials",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/SshCredentialsSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/builds/{id}" : {
      "get" : {
        "tags" : [ "builds" ],
        "summary" : "Gets a BuildRecord (active or archived)",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordSingleton"
            }
          }
        }
      }
    },
    "/builds/{id}/cancel" : {
      "post" : {
        "tags" : [ "builds" ],
        "summary" : "Cancel running build.",
        "description" : "",
        "operationId" : "cancel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordSingleton"
            }
          }
        }
      }
    },
    "/environments" : {
      "get" : {
        "tags" : [ "environments" ],
        "summary" : "Gets all Environments",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildEnvironmentPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildEnvironmentPage"
            }
          }
        }
      }
    },
    "/environments/{id}" : {
      "get" : {
        "tags" : [ "environments" ],
        "summary" : "Get specific Environment",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Environment id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildEnvironmentSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildEnvironmentSingleton"
            }
          }
        }
      }
    },
    "/licenses" : {
      "get" : {
        "tags" : [ "licenses" ],
        "summary" : "Gets all Licenses",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/LicensePage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/LicensePage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "licenses" ],
        "summary" : "Creates a new License",
        "description" : "",
        "operationId" : "createNew",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LicenseRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/LicenseSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/licenses/{id}" : {
      "get" : {
        "tags" : [ "licenses" ],
        "summary" : "Get specific License",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "License id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/LicenseSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          }
        }
      },
      "put" : {
        "tags" : [ "licenses" ],
        "summary" : "Updates an existing License",
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "License id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LicenseRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "licenses" ],
        "summary" : "Deletes an existing License",
        "description" : "",
        "operationId" : "delete",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "License id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/product-milestones" : {
      "get" : {
        "tags" : [ "product-milestones" ],
        "summary" : "Gets all Product Milestones",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductMilestonePage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/ProductMilestonePage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "product-milestones" ],
        "summary" : "Creates a new Product Milestone for the Specified Product Version",
        "description" : "",
        "operationId" : "createNew",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProductMilestoneRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductMilestoneSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/product-milestones/product-versions/{versionId}" : {
      "get" : {
        "tags" : [ "product-milestones" ],
        "summary" : "Gets all Product Milestones of the Specified Product Version",
        "description" : "",
        "operationId" : "getAllByProductVersionId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "Product Version id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductMilestonePage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/ProductMilestonePage"
            }
          }
        }
      }
    },
    "/product-milestones/{id}" : {
      "get" : {
        "tags" : [ "product-milestones" ],
        "summary" : "Gets specific Product Milestone",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product Milestone id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductMilestoneSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/ProductMilestoneSingleton"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "product-milestones" ],
        "summary" : "Updates an existing Product Milestone",
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product Milestone id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProductMilestoneRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/product-milestones/{id}/close-milestone" : {
      "put" : {
        "tags" : [ "product-milestones" ],
        "summary" : "Close/Release a Product Milestone",
        "description" : "",
        "operationId" : "closeMilestone",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product Milestone id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProductMilestoneRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/product-milestones/{id}/close-milestone-cancel" : {
      "post" : {
        "tags" : [ "product-milestones" ],
        "summary" : "Cancel Product Milestone Release process.",
        "description" : "",
        "operationId" : "cancelMilestoneClose",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product Milestone id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/product-milestones/{id}/distributed-artifacts" : {
      "get" : {
        "tags" : [ "product-milestones" ],
        "summary" : "Get the artifacts distributed in this milestone",
        "description" : "",
        "operationId" : "getDistributedArtifacts",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Product milestone id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ArtifactPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/ArtifactPage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "product-milestones" ],
        "summary" : "Adds an artifact to the list of distributed artifacts for this product milestone",
        "description" : "",
        "operationId" : "addDistributedArtifact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product milestone id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ArtifactRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/product-milestones/{id}/distributed-artifacts/{artifactId}" : {
      "delete" : {
        "tags" : [ "product-milestones" ],
        "summary" : "Removes an artifact from the specified product milestone",
        "description" : "",
        "operationId" : "removeDistributedArtifact",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product milestone id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "artifactId",
          "in" : "path",
          "description" : "Artifact id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/product-milestones/{id}/distributed-builds" : {
      "get" : {
        "tags" : [ "product-milestones" ],
        "summary" : "Gets the set of builds which produced artifacts distributed/shipped in a Product Milestone",
        "description" : "",
        "operationId" : "getDistributedBuilds",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Product Milestone id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/product-milestones/{id}/performed-builds" : {
      "get" : {
        "tags" : [ "product-milestones" ],
        "summary" : "Gets the set of builds performed during in a Product Milestone cycle",
        "description" : "",
        "operationId" : "getPerformedBuilds",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product Milestone id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/product-milestones/{id}/releases/latest" : {
      "get" : {
        "tags" : [ "product-milestones" ],
        "summary" : "Gets the set of builds which produced artifacts distributed/shipped in a Product Milestone",
        "description" : "",
        "operationId" : "getLatestRelease",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductMilestoneReleaseSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/ProductMilestoneReleaseSingleton"
            }
          }
        }
      }
    },
    "/product-releases" : {
      "get" : {
        "tags" : [ "product-releases" ],
        "summary" : "Gets all Product Releases",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductReleasePage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/ProductReleasePage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "product-releases" ],
        "summary" : "Creates a new Product Release",
        "description" : "",
        "operationId" : "createNew",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProductReleaseRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductReleaseSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/product-releases/product-versions/{versionId}" : {
      "get" : {
        "tags" : [ "product-releases" ],
        "summary" : "Gets all Product Releases of the Specified Product Version",
        "description" : "",
        "operationId" : "getAllByProductVersionId",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "Product Version id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductReleasePage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/ProductReleasePage"
            }
          }
        }
      }
    },
    "/product-releases/support-level" : {
      "get" : {
        "tags" : [ "product-releases" ],
        "summary" : "Gets all Product Releases Support Level",
        "description" : "",
        "operationId" : "getAllSupportLevel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/SupportLevelPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/SupportLevelPage"
            }
          }
        }
      }
    },
    "/product-releases/{id}" : {
      "get" : {
        "tags" : [ "product-releases" ],
        "summary" : "Gets specific Product Release",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product Release id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductReleaseSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/ProductReleaseSingleton"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "product-releases" ],
        "summary" : "Updates an existing Product Release",
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product Release id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProductReleaseRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/product-releases/{id}/distributed-build-records-ids" : {
      "get" : {
        "tags" : [ "product-releases" ],
        "summary" : "Gets all BuildRecords distributed for Product Version",
        "description" : "",
        "operationId" : "getAllBuildsInDistributedRecordsetOfProductRelease",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Product Release id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordIds"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordIds"
            }
          }
        }
      }
    },
    "/product-versions" : {
      "get" : {
        "tags" : [ "product-versions" ],
        "summary" : "Gets all Product Versions",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductVersionPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/ProductVersionPage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "product-versions" ],
        "summary" : "Create a new ProductVersion for a Product",
        "description" : "",
        "operationId" : "createNewProductVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProductVersionRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductVersionSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/product-versions/{id}" : {
      "get" : {
        "tags" : [ "product-versions" ],
        "summary" : "Gets specific Product Version",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product Version id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductVersionSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          }
        }
      },
      "put" : {
        "tags" : [ "product-versions" ],
        "summary" : "Updates an existing Product Version",
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product Version id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProductVersionRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/product-versions/{id}/build-configuration-sets" : {
      "get" : {
        "tags" : [ "product-versions" ],
        "summary" : "Gets build configuration sets associated with a product version",
        "description" : "",
        "operationId" : "getBuildConfigurationSets",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Product Version id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSetPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationSetPage"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "product-versions" ],
        "operationId" : "updateBuildConfigurationSets",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product Version id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/BuildConfigurationSetRest"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/products" : {
      "get" : {
        "tags" : [ "products" ],
        "summary" : "Gets all Products",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/ProductPage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "products" ],
        "summary" : "Creates a new Product",
        "description" : "",
        "operationId" : "createNew",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProductRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/products/{id}" : {
      "get" : {
        "tags" : [ "products" ],
        "summary" : "Get specific Product",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/ProductSingleton"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "products" ],
        "summary" : "Updates an existing Product",
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProductRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/products/{id}/product-versions" : {
      "get" : {
        "tags" : [ "products" ],
        "summary" : "Get all versions for a Product",
        "description" : "",
        "operationId" : "getProductVersions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Product id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProductVersionPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/ProductVersionPage"
            }
          }
        }
      }
    },
    "/projects" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Gets all Projects",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProjectPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/ProjectPage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "projects" ],
        "summary" : "Creates a new Project",
        "description" : "",
        "operationId" : "createNew",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProjectRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProjectSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/projects/{id}" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Gets specific Project",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Project id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/ProjectSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/ProjectSingleton"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "projects" ],
        "summary" : "Updates an existing Project",
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Project id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProjectRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "projects" ],
        "summary" : "Removes a specific project and associated build configurations",
        "description" : "",
        "operationId" : "deleteSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Project id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/projects/{id}/build-configurations" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Gets all BuildConfigurations associated with the specified Project Id",
        "description" : "",
        "operationId" : "getBuildConfigurations",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Project Id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildConfigurationPage"
            }
          }
        }
      }
    },
    "/repository-configurations" : {
      "get" : {
        "tags" : [ "repository-configurations" ],
        "summary" : "Gets all Repository Configurations",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/RepositoryConfigurationPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/RepositoryConfigurationPage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "repository-configurations" ],
        "summary" : "Creates a new Repository Configuration. NOTE: it does not create the repository in the scm server, it only creates an entry in PNC database. Useful when you already have internal and external scm repositories created.",
        "description" : "",
        "operationId" : "createNew",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RepositoryConfigurationRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Entity successfully created",
            "schema" : {
              "$ref" : "#/definitions/RepositoryConfigurationSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/repository-configurations/match-by-scm-url" : {
      "get" : {
        "tags" : [ "repository-configurations" ],
        "summary" : "Searches for Repository Configurations based on internal or external url, ignoring the protocol and \".git\" suffix. Only exact matches are returned.",
        "description" : "",
        "operationId" : "match",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Url to search for",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/RepositoryConfigurationPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/RepositoryConfigurationPage"
            }
          }
        }
      }
    },
    "/repository-configurations/search-by-scm-url" : {
      "get" : {
        "tags" : [ "repository-configurations" ],
        "summary" : "Search for Repository Configurations based on internal or external url, ignoring the protocol and \".git\" suffix. The matching is done using LIKE.",
        "description" : "",
        "operationId" : "search",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Url part to search for",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/RepositoryConfigurationPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/RepositoryConfigurationPage"
            }
          }
        }
      }
    },
    "/repository-configurations/{id}" : {
      "get" : {
        "tags" : [ "repository-configurations" ],
        "summary" : "Gets a specific Repository Configuration",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Repository Configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/RepositoryConfigurationSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/RepositoryConfigurationSingleton"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "repository-configurations" ],
        "summary" : "Updates an existing Repository Configuration",
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Repository Configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RepositoryConfigurationRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/running-build-records" : {
      "get" : {
        "tags" : [ "running-build-records" ],
        "summary" : "Gets all running Build Records",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Since this endpoint does not support queries, fulltext search is hard-coded for some predefined fields (record id, configuration name) and performed using this argument. Empty string leaves all data unfiltered.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/running-build-records/build-config-set-records/{id}" : {
      "get" : {
        "tags" : [ "running-build-records" ],
        "summary" : "Gets running Build Records for a specific Build Configuration Set Record.",
        "description" : "",
        "operationId" : "getAllForBCSetRecord",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Since this endpoint does not support queries, fulltext search is hard-coded for some predefined fields (record id, configuration name) and performed using this argument. Empty string leaves all data unfiltered.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration Set id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/running-build-records/build-configurations/{id}" : {
      "get" : {
        "tags" : [ "running-build-records" ],
        "summary" : "Gets running Build Records for a specific Build Configuration.",
        "description" : "",
        "operationId" : "getAllForBC",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Since this endpoint does not support queries, fulltext search is hard-coded for some predefined fields (record id, configuration name) and performed using this argument. Empty string leaves all data unfiltered.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Build Configuration id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    },
    "/running-build-records/{id}" : {
      "get" : {
        "tags" : [ "running-build-records" ],
        "summary" : "Gets specific running Build Record",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "BuildRecord id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordSingleton"
            }
          }
        }
      }
    },
    "/test/build-set-status/notify" : {
      "post" : {
        "tags" : [ "test" ],
        "summary" : "Sends BuildSetStatusChangedEvent just like it was from Core, useful for testing WebSockets",
        "description" : "",
        "operationId" : "sendBuildSetStatusChangedEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BuildSetStatusChangedEvent"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/test/build-status/notify" : {
      "post" : {
        "tags" : [ "test" ],
        "summary" : "Sends BuildStatusChangedEvent just like it was from Core, useful for testing WebSockets",
        "description" : "",
        "operationId" : "sendBuildStatusChangedEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BuildStatusChangedEventRest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/test/nocontent" : {
      "get" : {
        "tags" : [ "test" ],
        "operationId" : "nocontent",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/test/throw" : {
      "get" : {
        "tags" : [ "test" ],
        "operationId" : "throwEx",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/test/unauthorized" : {
      "get" : {
        "tags" : [ "test" ],
        "operationId" : "redirect",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Gets all Users",
        "description" : "",
        "operationId" : "getAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/UserPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/UserPage"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Creates new User",
        "description" : "",
        "operationId" : "createNew",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/UserSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/users/loggedUser" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Gets logged user and in case not existing creates a new one",
        "description" : "",
        "operationId" : "getLoggedUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/UserSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Gets specific User",
        "description" : "",
        "operationId" : "getSpecific",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/UserSingleton"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "404" : {
            "description" : "Can not find specified result",
            "schema" : {
              "$ref" : "#/definitions/UserSingleton"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "users" ],
        "summary" : "Updates an existing User",
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserRest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          }
        }
      }
    },
    "/users/{id}/builds" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get all BuildRecords (running and archived) triggered by this User, returns empty list if no build records are found",
        "description" : "",
        "operationId" : "getBuilds",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "required" : false,
          "type" : "integer",
          "default" : "0",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size",
          "required" : false,
          "type" : "integer",
          "default" : "50",
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponseRest"
            }
          },
          "204" : {
            "description" : "Success but no content provided",
            "schema" : {
              "$ref" : "#/definitions/BuildRecordPage"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "ProductPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductRest"
          }
        }
      }
    },
    "BpmTaskRestSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/BpmTaskRest"
        }
      }
    },
    "ProductMilestoneRest" : {
      "type" : "object",
      "required" : [ "id", "productVersionId", "version" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "startingDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "plannedEndDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "downloadUrl" : {
          "type" : "string"
        },
        "issueTrackerUrl" : {
          "type" : "string"
        },
        "productVersionId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "performedBuilds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "distributedArtifactIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "productReleaseId" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "xml" : {
        "name" : "ProductMilestone"
      }
    },
    "ProductVersionPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductVersionRest"
          }
        }
      }
    },
    "ResultRest" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "ACCEPTED", "SUCCESS", "REJECTED", "FAILED", "SYSTEM_ERROR" ]
        },
        "message" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "ProjectRest" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "issueTrackerUrl" : {
          "type" : "string"
        },
        "projectUrl" : {
          "type" : "string"
        },
        "configurationIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "licenseId" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "xml" : {
        "name" : "Project"
      }
    },
    "SupportLevelPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "UNRELEASED", "EARLYACCESS", "SUPPORTED", "EXTENDED_SUPPORT", "EOL" ]
          }
        }
      }
    },
    "BuildEnvironmentRest" : {
      "type" : "object",
      "required" : [ "id", "systemImageId", "systemImageType" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "systemImageRepositoryUrl" : {
          "type" : "string"
        },
        "systemImageId" : {
          "type" : "string"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "systemImageType" : {
          "type" : "string",
          "enum" : [ "DOCKER_IMAGE", "VIRTUAL_MACHINE_RAW", "VIRTUAL_MACHINE_QCOW2", "LOCAL_WORKSPACE" ]
        },
        "deprecated" : {
          "type" : "boolean",
          "default" : false
        },
        "imageRepositoryUrl" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "BuildEnvironment"
      }
    },
    "ProductSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/ProductRest"
        }
      }
    },
    "ArtifactPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ArtifactRest"
          }
        }
      }
    },
    "ProductVersionRefRest" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "string"
        },
        "productName" : {
          "type" : "string"
        },
        "productId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentMilestoneId" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "xml" : {
        "name" : "ProductVersionRefRest"
      }
    },
    "BuildConfigurationPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BuildConfigurationRest"
          }
        }
      }
    },
    "BuildConfigurationSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/BuildConfigurationRest"
        }
      }
    },
    "RepositoryConfigurationPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RepositoryConfigurationRest"
          }
        }
      }
    },
    "BuildConfigurationAuditedRest" : {
      "type" : "object",
      "required" : [ "id", "repositoryConfiguration" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rev" : {
          "type" : "integer",
          "format" : "int32"
        },
        "idRev" : {
          "$ref" : "#/definitions/IdRev"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "buildScript" : {
          "type" : "string"
        },
        "repositoryConfiguration" : {
          "$ref" : "#/definitions/RepositoryConfigurationRest"
        },
        "scmRevision" : {
          "type" : "string"
        },
        "creationTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastModificationTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "environmentId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "project" : {
          "$ref" : "#/definitions/ProjectRest"
        },
        "environment" : {
          "$ref" : "#/definitions/BuildEnvironmentRest"
        },
        "genericParameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "xml" : {
        "name" : "BuildConfigurationAudited"
      }
    },
    "TargetRepositoryRest" : {
      "type" : "object",
      "required" : [ "artifactIds", "id", "identifier", "repositoryPath", "repositoryType", "temporaryRepo" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "temporaryRepo" : {
          "type" : "boolean",
          "default" : false
        },
        "identifier" : {
          "type" : "string"
        },
        "repositoryType" : {
          "type" : "string",
          "enum" : [ "MAVEN", "NPM", "COCOA_POD", "GENERIC_PROXY" ]
        },
        "repositoryPath" : {
          "type" : "string"
        },
        "artifactIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "xml" : {
        "name" : "TargetRepository"
      }
    },
    "BuildRecordRest" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "submitTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "NEW", "ENQUEUED", "WAITING_FOR_DEPENDENCIES", "BUILDING", "BUILD_COMPLETED", "DONE", "REJECTED", "REJECTED_FAILED_DEPENDENCIES", "REJECTED_ALREADY_BUILT", "SYSTEM_ERROR", "DONE_WITH_ERRORS", "CANCELLED" ]
        },
        "buildConfigurationId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "buildConfigurationName" : {
          "type" : "string"
        },
        "buildConfigurationRev" : {
          "type" : "integer",
          "format" : "int32"
        },
        "projectId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "projectName" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "username" : {
          "type" : "string"
        },
        "scmRepoURL" : {
          "type" : "string"
        },
        "scmRevision" : {
          "type" : "string"
        },
        "buildEnvironmentId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "liveLogsUri" : {
          "type" : "string"
        },
        "buildConfigSetRecordId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "buildContentId" : {
          "type" : "string"
        },
        "temporaryBuild" : {
          "type" : "boolean",
          "default" : false
        },
        "productMilestoneId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "user" : {
          "$ref" : "#/definitions/UserRest"
        },
        "buildConfigurationAudited" : {
          "$ref" : "#/definitions/BuildConfigurationAuditedRest"
        },
        "executionRootName" : {
          "type" : "string"
        },
        "executionRootVersion" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "BuildRecord"
      }
    },
    "BuildStatusChangedEventRest" : {
      "type" : "object",
      "properties" : {
        "oldStatus" : {
          "type" : "string",
          "enum" : [ "NEW", "ENQUEUED", "WAITING_FOR_DEPENDENCIES", "BUILDING", "BUILD_COMPLETED", "DONE", "REJECTED", "REJECTED_FAILED_DEPENDENCIES", "REJECTED_ALREADY_BUILT", "SYSTEM_ERROR", "DONE_WITH_ERRORS", "CANCELLED" ]
        },
        "newStatus" : {
          "type" : "string",
          "enum" : [ "NEW", "ENQUEUED", "WAITING_FOR_DEPENDENCIES", "BUILDING", "BUILD_COMPLETED", "DONE", "REJECTED", "REJECTED_FAILED_DEPENDENCIES", "REJECTED_ALREADY_BUILT", "SYSTEM_ERROR", "DONE_WITH_ERRORS", "CANCELLED" ]
        },
        "buildTaskId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "buildConfigurationId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "buildConfigurationRevision" : {
          "type" : "integer",
          "format" : "int32"
        },
        "buildConfigurationName" : {
          "type" : "string"
        },
        "buildStartTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "buildEndTime" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "BuildRecordPushRequestRest" : {
      "type" : "object",
      "required" : [ "buildRecordId" ],
      "properties" : {
        "tagPrefix" : {
          "type" : "string"
        },
        "buildRecordId" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "LicenseRest" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fullName" : {
          "type" : "string"
        },
        "fullContent" : {
          "type" : "string"
        },
        "refUrl" : {
          "type" : "string"
        },
        "shortName" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "License"
      }
    },
    "UserRest" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "email" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "User"
      }
    },
    "BpmTaskRestPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BpmTaskRest"
          }
        }
      }
    },
    "RepositoryCreationUrlAutoRest" : {
      "type" : "object",
      "properties" : {
        "scmUrl" : {
          "type" : "string"
        },
        "preBuildSyncEnabled" : {
          "type" : "boolean",
          "default" : false
        },
        "buildConfigurationRest" : {
          "$ref" : "#/definitions/BuildConfigurationRest"
        }
      }
    },
    "ProductMilestoneSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/ProductMilestoneRest"
        }
      }
    },
    "ProductReleasePage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductReleaseRest"
          }
        }
      }
    },
    "BuildConfigSetRecordSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/BuildConfigSetRecordRest"
        }
      }
    },
    "ErrorResponseRest" : {
      "type" : "object",
      "properties" : {
        "errorType" : {
          "type" : "string"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "details" : {
          "type" : "object"
        }
      }
    },
    "BuildConfigurationSetPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BuildConfigurationSetRest"
          }
        }
      }
    },
    "Singleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "type" : "object"
        }
      }
    },
    "BuildRecordIds" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ArtifactImportError" : {
      "type" : "object",
      "properties" : {
        "artifactId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "errorMessage" : {
          "type" : "string"
        }
      }
    },
    "BuildEnvironmentSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/BuildEnvironmentRest"
        }
      }
    },
    "BuildConfigurationSetRecordPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BuildConfigSetRecordRest"
          }
        }
      }
    },
    "LicenseSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/LicenseRest"
        }
      }
    },
    "ProductMilestonePage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductMilestoneRest"
          }
        }
      }
    },
    "ProductMilestoneReleaseRest" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "IN_PROGRESS", "FAILED", "SUCCEEDED", "CANCELED", "SYSTEM_ERROR" ]
        },
        "log" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "startingDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "xml" : {
        "name" : "ProductMilestoneRelease"
      }
    },
    "ProductRest" : {
      "type" : "object",
      "required" : [ "abbreviation", "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "abbreviation" : {
          "type" : "string"
        },
        "productCode" : {
          "type" : "string"
        },
        "pgmSystemName" : {
          "type" : "string"
        },
        "productVersionIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "productVersionRefs" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ProductVersionRefRest"
          }
        }
      },
      "xml" : {
        "name" : "Product"
      }
    },
    "ProjectPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProjectRest"
          }
        }
      }
    },
    "ProductVersionRest" : {
      "type" : "object",
      "required" : [ "id", "productId", "version" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "string"
        },
        "productId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "productName" : {
          "type" : "string"
        },
        "currentProductMilestoneId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "productMilestones" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductMilestoneRest"
          }
        },
        "productReleases" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductReleaseRest"
          }
        },
        "buildConfigurationSets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BuildConfigurationSetRest"
          }
        },
        "buildConfigurations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BuildConfigurationRest"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "xml" : {
        "name" : "ProductVersion"
      }
    },
    "ProductMilestoneReleaseSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/ProductMilestoneReleaseRest"
        }
      }
    },
    "SshCredentialsSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/SshCredentials"
        }
      }
    },
    "BuildConfigurationRest" : {
      "type" : "object",
      "required" : [ "environment", "id", "name", "project", "repositoryConfiguration" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "buildScript" : {
          "type" : "string"
        },
        "repositoryConfiguration" : {
          "$ref" : "#/definitions/RepositoryConfigurationRest"
        },
        "scmRevision" : {
          "type" : "string"
        },
        "creationTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastModificationTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "archived" : {
          "type" : "boolean",
          "default" : false
        },
        "project" : {
          "$ref" : "#/definitions/ProjectRest"
        },
        "environment" : {
          "$ref" : "#/definitions/BuildEnvironmentRest"
        },
        "dependencyIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "productVersionId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "buildConfigurationSetIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "genericParameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "xml" : {
        "name" : "Configuration"
      }
    },
    "BuildConfigurationAuditedPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BuildConfigurationAuditedRest"
          }
        }
      }
    },
    "BuildSetStatusChangedEvent" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "buildSetStartTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "buildSetEndTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "buildSetConfigurationId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "newStatus" : {
          "type" : "string",
          "enum" : [ "NEW", "DONE", "REJECTED" ]
        },
        "buildSetTaskId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "oldStatus" : {
          "type" : "string",
          "enum" : [ "NEW", "DONE", "REJECTED" ]
        },
        "buildSetConfigurationName" : {
          "type" : "string"
        }
      }
    },
    "BpmNotificationRest" : {
      "type" : "object",
      "properties" : {
        "eventType" : {
          "type" : "string"
        }
      }
    },
    "BuildEnvironmentPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BuildEnvironmentRest"
          }
        }
      }
    },
    "IdRev" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rev" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "BuildConfigSetRecordRest" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "buildConfigurationSetId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "buildConfigurationSetName" : {
          "type" : "string"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "SUCCESS", "FAILED", "UNSTABLE", "BUILDING", "REJECTED", "CANCELLED", "SYSTEM_ERROR", "UNKNOWN", "NONE" ]
        },
        "userId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "username" : {
          "type" : "string"
        },
        "productVersionId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "buildRecordIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "temporaryBuild" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "BuildRecord"
      }
    },
    "ArtifactRest" : {
      "type" : "object",
      "required" : [ "id", "identifier" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "identifier" : {
          "type" : "string"
        },
        "artifactQuality" : {
          "type" : "string",
          "enum" : [ "NEW", "VERIFIED", "TESTED", "DEPRECATED", "BLACKLISTED", "DELETED", "TEMPORARY" ]
        },
        "targetRepository" : {
          "$ref" : "#/definitions/TargetRepositoryRest"
        },
        "md5" : {
          "type" : "string"
        },
        "sha1" : {
          "type" : "string"
        },
        "sha256" : {
          "type" : "string"
        },
        "filename" : {
          "type" : "string"
        },
        "deployPath" : {
          "type" : "string"
        },
        "buildRecordIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "dependantBuildRecordIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "importDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "originUrl" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        },
        "deployUrl" : {
          "type" : "string"
        },
        "publicUrl" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Artifact"
      }
    },
    "LicensePage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LicenseRest"
          }
        }
      }
    },
    "RepositoryConfigurationRest" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "internalUrl" : {
          "type" : "string"
        },
        "externalUrl" : {
          "type" : "string"
        },
        "preBuildSyncEnabled" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "RepositoryConfiguration"
      }
    },
    "BuildConfigurationAuditedSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/BuildConfigurationAuditedRest"
        }
      }
    },
    "BuildConfigSetRecordPushRequestRest" : {
      "type" : "object",
      "required" : [ "buildConfigSetRecordId" ],
      "properties" : {
        "tagPrefix" : {
          "type" : "string"
        },
        "buildConfigSetRecordId" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "SshCredentials" : {
      "type" : "object",
      "properties" : {
        "command" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "BuildConfigurationSetSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/BuildConfigurationSetRest"
        }
      }
    },
    "RepositoryConfigurationSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/RepositoryConfigurationRest"
        }
      }
    },
    "UserPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UserRest"
          }
        }
      }
    },
    "BuildConfigurationSetRest" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "productVersionId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "buildConfigurationIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "xml" : {
        "name" : "BuildConfigurationSet"
      }
    },
    "BuildRecordPushResultRest" : {
      "type" : "object",
      "required" : [ "buildRecordId", "id", "log", "status" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "buildRecordId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "SUCCESS", "FAILED", "SYSTEM_ERROR", "CANCELED" ]
        },
        "log" : {
          "type" : "string"
        },
        "artifactImportErrors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ArtifactImportError"
          }
        },
        "brewBuildId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "brewBuildUrl" : {
          "type" : "string"
        }
      }
    },
    "ProjectSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/ProjectRest"
        }
      }
    },
    "ProductReleaseRest" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "string"
        },
        "releaseDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "downloadUrl" : {
          "type" : "string"
        },
        "issueTrackerUrl" : {
          "type" : "string"
        },
        "productVersionId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "productMilestoneId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "supportLevel" : {
          "type" : "string",
          "enum" : [ "UNRELEASED", "EARLYACCESS", "SUPPORTED", "EXTENDED_SUPPORT", "EOL" ]
        }
      },
      "xml" : {
        "name" : "ProductRelease"
      }
    },
    "AttributeSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "BpmTaskRest" : {
      "type" : "object",
      "properties" : {
        "taskId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "processInstanceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "processName" : {
          "type" : "string"
        },
        "events" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BpmNotificationRest"
          }
        }
      }
    },
    "UserSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/UserRest"
        }
      }
    },
    "ProductReleaseSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/ProductReleaseRest"
        }
      }
    },
    "BuildRecordSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/BuildRecordRest"
        }
      }
    },
    "ProductVersionSingleton" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "$ref" : "#/definitions/ProductVersionRest"
        }
      }
    },
    "BuildRecordPage" : {
      "type" : "object",
      "properties" : {
        "pageIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BuildRecordRest"
          }
        }
      }
    }
  }
}